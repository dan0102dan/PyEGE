"""
На вход программе подается два числа N и K, а также последовательность из N целых чисел в диапазоне от 1 до K. Рассматриваются все непрерывные подпоследовательности исходной последовательности, в которых содержатся K различных чисел. Программа должна вывести одно число – минимальную длину такой подпоследовательности. Гарантируется, что в последовательности такая подпоследовательность существует.
Входные данные: Даны два входных файла: файл A (27a.txt) и файл B (27b.txt), каждый из которых содержит в первой строке натуральное число N – количество чисел в последовательности (100 ≤ N ≤ 5000000) и натуральное число K. В каждой из следующих N строк записано одно целое число в диапазоне от 1 до K (2 ≤ K ≤ 10000).
Пример входного файла:
8 5
1
1
2
1
3
4
5
1
В этом наборе есть подпоследовательность (2, 1, 3, 4, 5), содержащая все числа от 1 до 5. Ответ: 5.
В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.
"""

with open('27b.txt') as f:
	N, K = map(int, f.readline().split())
	data = [int(f.readline()) for i in range(N)]

L, R = 0, 0
d = 10**10
m = [0] * (K + 1) # для хранения кол-ва чисел от 1 до K

# перебор с помощью двух указателей
while R < len(data):
	while m.count(0) != 1:
		R += 1
		if R == len(data):
			break
		m[data[R]] += 1
	while m.count(0) == 1:
		d = min(d, R - L + 1) # прибавляем 1, так как индексирование массива начинается с 0
		m[data[L]] -= 1
		L += 1
print(d)