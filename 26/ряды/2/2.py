# В лесополосе осуществляется посадка деревьев: саженцы высаживают рядами на одинаковом расстоянии. Спустя некоторое время с помощью аэросъемки выясняют, какие саженцы прижились. Необходимо определить ряд с максимальным номером, в котором есть подряд ровно K неприжившихся саженцев при условии, что справа и слева от них саженцы прижились.  В ответе запишите сначала наибольший номер ряда, затем наименьший номер неприжившегося саженца.
# Входные данные представлены в файле 26.txt следующим образом.  В первой строке записаны два числа: N – количество занятых мест (натуральное число, не превышающее 10 000) и K – длина цепочки неприжившихся саженцев, которую нужно найти. Каждая из следующих N строк содержит сведения об одном прижившемся саженце – два натуральных числа, не превышающих 100 000: номер ряда и номер саженца в ряду.
# Пример входного файла:
# 6 3
# 40 30 
# 40 34 
# 50 125 
# 50 129 
# 50 64 
# 50 68
# В примере требуется найти 3 подряд идущих неприжившихся саженца. Ответ: 50 65.

with open('26.txt') as f:
	N, K = map(int, f.readline().split())

	rows = {}
	for i in range(N):
		r, p = map(int, f.readline().split())

		if r not in rows:
			rows[r] = [p]
		else:
			rows[r].append(p)
		
res = (0, 0)
for r in sorted(rows.keys()):
	rows[r].sort()

	for i in range(len(rows[r]) - 1):
		if rows[r][i + 1] - rows[r][i] == K + 1:
			res = (r, rows[r][i] + 1)
			break

print(res)