# Текст разбит на строки различной длины. Необходимо найти строку, содержащую самую длинную цепочку стоящих подряд одинаковых букв. 
# Если таких строк несколько, надо взять ту, которая в файле встретилась раньше.  
# Определите, какая буква встречается в этой строке чаще всего. Если таких букв несколько, надо взять ту, которая стоит раньше в алфавите.  
# Запишите в ответе эту букву, а затем – сколько раз она встречается во всем файле.

with open('24.txt') as f:
	lines = list(map(lambda x: x.strip(), f.readlines()))
	
	res = [('A', 0)]
	for line in lines: # читаем каждую строку
		letters = []
		for letter in line: # читаем каждый символ в строке
			if letter not in list(map(lambda x: x[0], letters)): # если этот не встречался, то сохраняем
				# алгоритм поиска "длинных цепочек стоящих подряд одинаковых букв"
				x = letter 
				while x in line:
					x += letter
				# сохраняем
				letters.append((letter, len(x) - 1))

		maxCount = sorted(letters, reverse=True, key=lambda x: x[1])[0][1] # сортируем и ищем максимальное число
		cur = list(filter(lambda x: maxCount == x[1], letters)) # фильтруем буквы, которые встречались реже максимального
		# если больше максимума, обновляем
		if (cur[0][1] > res[0][1]):
			res = list(cur)
	# выбираем букву, стояющую раньше по алфавиту
	res = sorted(res, key=lambda x: x[0])[0]

	print(res[0], sum(line.count(res[0]) for line in lines))